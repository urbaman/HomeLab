version: "3.9"
 
# NETWORKS
networks:
#  dnet:
#    external: true
  traefik:
    external: true
  pihole:
    external: true

services:
  # Portainer - WebUI for Containers
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest # Use portainer-ee if you have a Business Edition license key
    pull_policy: always
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    # profiles: ["core", "all"]
    networks:
    #  - dnet
      - traefik
      - pihole
    command: -H unix:///var/run/docker.sock # # Use Docker Socket Proxy instead for improved security
    #command: -H tcp://socket-proxy:2375
    ports:
      - "9000:9000"
#      - "8002:8000"
#      - "9443:9443"
    dns:
      - 192.168.4.100
      - 127.0.0.11
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # # Use Docker Socket Proxy instead for improved security
      - $DATADIR/portainer/data:/data # Change to local directory if you want to save/transfer config locally
    environment:
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.portainer-rtr.entrypoints=websecure"
      - "traefik.http.routers.portainer-rtr.rule=Host(`portainer.$DOMAINNAME_1`)"
      # Middlewares
      - "traefik.http.routers.portainer-rtr.middlewares=middlewares-chain-no-auth@file"
      # HTTP Services
      - "traefik.http.routers.portainer-rtr.service=portainer-svc"
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"
  # Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    pull_policy: always
    container_name: dozzle
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    # profiles: ["apps", "all"]
    networks:
    #  - dnet
      - traefik
      - pihole
    ports:
      - "8080:8080"
    dns:
      - 192.168.4.100
      - 127.0.0.11
    environment:
      - DOZZLE_LEVEL=info
      - DOZZLE_TAILSIZE=300
      - DOZZLE_FILTER="status=running"
      # - DOZZLE_FILTER: "label=log_me" # limits logs displayed to containers with this label
      # - DOCKER_HOST: tcp://socket-proxy:2375
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.dozzle-rtr.entrypoints=websecure"
      - "traefik.http.routers.dozzle-rtr.rule=Host(`dozzle.$DOMAINNAME_1`)"
      # Middlewares
      - "traefik.http.routers.dozzle-rtr.middlewares=middlewares-chain-no-auth@file"
      # HTTP Services
      - "traefik.http.routers.dozzle-rtr.service=dozzle-svc"
      - "traefik.http.services.dozzle-svc.loadbalancer.server.port=8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy instead for improved security
  # Homepage
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    pull_policy: always
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    container_name: homepage
    networks:
    #  - socket_proxy
    #  - dnet
      - traefik
      - pihole
    ports:
      - 3000:3000
    dns:
      - 192.168.4.100
      - 127.0.0.11
    volumes:
      - $CONFIGDIR/homepage/config:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # (optional) For docker integrations, see alternative methods
    environment:
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.homepage-rtr.entrypoints=websecure"
      - "traefik.http.routers.homepage-rtr.rule=Host(`homepage.$DOMAINNAME_1`)"
      # Middlewares
      - "traefik.http.routers.homepage-rtr.middlewares=middlewares-chain-no-auth@file"
      # HTTP Services
      - "traefik.http.routers.homepage-rtr.service=homepage-svc"
      - "traefik.http.services.homepage-svc.loadbalancer.server.port=3000"

