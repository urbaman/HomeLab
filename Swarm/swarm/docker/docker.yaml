networks:
  portainer:
    external: true
  management:
    external: true

services:
  portainer_agent:
    image: portainer/agent:lts
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    environment:
      - TZ=Europe/ROme
    networks:
      - portainer
    deploy:
      mode: global
      #placement:
      #  constraints: [node.platform.os == linux]

  portainer_server:
    image: portainer/portainer-ee:lts
    command: -H tcp://tasks.portainer_agent:9001 --tlsskipverify
    #ports:
    #  - "9443:9443"
    #  - "9000:9000"
    #  - "8000:8000"
    volumes:
      - /SwarmVolumes/data/portainer:/data
    environment:
      - TZ=Europe/Rome
    networks:
      - portainer
      - management
    deploy:
      mode: replicated
      replicas: 1
      #placement:
      #  constraints: [node.role == manager]
      labels:
        - "org.label-schema.group=management"
        - "traefik.enable=true"
        - "traefik.swarm.network=management"
        # HTTP Routers
        - "traefik.http.routers.portainer-router.entrypoints=websecure"
        - "traefik.http.routers.portainer-router.rule=Host(`portainer.domain.com`)"
        # Middlewares
        - "traefik.http.routers.portainer-router.middlewares=secure-headers@file"
        # HTTP Services
        - "traefik.http.routers.portainer-router.service=portainer-svc"
        - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"
        - homepage.group=Docker
        - homepage.name=Portainer
        - homepage.icon=portainer.svg
        - homepage.href=https://portainer.domain.com
        - homepage.description=Portainer
        #- homepage.showStats=true
        - homepage.widget.type=portainer
        - homepage.widget.url=https://portainer.domain.com
        - homepage.widget.key=<portainer-api-key>
        - homepage.widget.env=1
