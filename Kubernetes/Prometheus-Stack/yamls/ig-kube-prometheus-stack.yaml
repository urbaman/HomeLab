apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: grafana-domain-com
  namespace: monitoring
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - grafana.domain.com
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: grafana-domain-com
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: monitoring-kube-prometheus-stack-security
  namespace: monitoring
spec:
  headers:
    frameDeny: true
    sslRedirect: true
    browserXssFilter: true
    contentTypeNosniff: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: monitoring-grafana-transport
  namespace: monitoring
spec:
  serverName: grafana
  insecureSkipVerify: true
---
apiVersion: traefik.io/v1alpha1
kind: TLSOption
metadata:
  name: monitoring-kube-prometheus-stack-tlsoptions
  namespace: monitoring
spec:
  minVersion: VersionTLS12
  cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_AES_256_GCM_SHA384
    - TLS_AES_128_GCM_SHA256
    - TLS_CHACHA20_POLY1305_SHA256
    - TLS_FALLBACK_SCSV
  curvePreferences:
    - CurveP521
    - CurveP384
  sniStrict: false
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: monitoring-grafana-websecure
  namespace: monitoring
  annotations:
    gethomepage.dev/href: "https://grafana.domain.com"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/description: "Grafana Monitoring Dashboards"
    gethomepage.dev/group: Monitoring
    gethomepage.dev/icon: grafana.svg
    gethomepage.dev/app: grafana # optional, may be needed if app.kubernetes.io/name != ingress metadata.name
    gethomepage.dev/name: "Grafana"
    #gethomepage.dev/showStats: "true"
    gethomepage.dev/widget.type: "grafana"
    gethomepage.dev/widget.version: "2"
    gethomepage.dev/widget.alerts: "alertmanager"
    gethomepage.dev/widget.url: "https://grafana.domain.com"
    gethomepage.dev/widget.username: GRAFANA_USERNAME
    gethomepage.dev/widget.password: GRAFANA_PASSWORD
    #gethomepage.dev/pod-selector: ""
    #gethomepage.dev/weight: 10 # optional
    #gethomepage.dev/instance: "public" # optional
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`grafana.domain.com`)
      services:
      - name: kube-prometheus-stack-grafana
        port: 80
        serversTransport: monitoring-grafana-transport
      middlewares:
        - name: monitoring-kube-prometheus-stack-security
  tls:
    secretName: grafana-domain-com
    options:
      name: monitoring-kube-prometheus-stack-tlsoptions
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: prometheus-domain-com
  namespace: monitoring
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - prometheus.domain.com
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: prometheus-domain-com
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: monitoring-prometheus-transport
  namespace: monitoring
spec:
  serverName: prometheus
  insecureSkipVerify: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: monitoring-prometheus-websecure
  namespace: monitoring
  annotations:
    gethomepage.dev/href: "https://prometrheus.domain.com"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/description: "Prometheus Monitoring DB"
    gethomepage.dev/group: Monitoring
    gethomepage.dev/icon: prometheus.svg
    gethomepage.dev/app: prometheus # optional, may be needed if app.kubernetes.io/name != ingress metadata.name
    gethomepage.dev/name: "Prometheus"
    #gethomepage.dev/showStats: "true"
    gethomepage.dev/widget.type: "prometheus"
    #gethomepage.dev/version: "2"
    #gethomepage.dev/alerts: alertmanager
    gethomepage.dev/widget.url: "https://prometheus.domain.com"
    #gethomepage.dev/pod-selector: ""
    #gethomepage.dev/weight: 10 # optional
    #gethomepage.dev/instance: "public" # optional
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`prometheus.domain.com`)
      services:
      - name: kube-prometheus-stack-prometheus
        port: 9090
        serversTransport: monitoring-prometheus-transport
      middlewares:
        - name: monitoring-kube-prometheus-stack-security
  tls:
    secretName: prometheus-domain-com
    options:
      name: monitoring-kube-prometheus-stack-tlsoptions
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: alertmanager-domain-com
  namespace: monitoring
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - alertmanager.domain.com
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: alertmanager-domain-com
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: monitoring-alertmanager-transport
  namespace: monitoring
spec:
  serverName: alertmanager
  insecureSkipVerify: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: monitoring-alertmanager-websecure
  namespace: monitoring
  annotations:
    gethomepage.dev/href: "https://alertmanager.domain.com"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/description: "Alertmanager Alert System"
    gethomepage.dev/group: Monitoring
    gethomepage.dev/icon: alertmanager.svg
    gethomepage.dev/app: alertmanager # optional, may be needed if app.kubernetes.io/name != ingress metadata.name
    gethomepage.dev/name: "Alertmanager"
    #gethomepage.dev/showStats: "true"
    #gethomepage.dev/widget.type: "grafana"
    #gethomepage.dev/version: "2"
    #gethomepage.dev/alerts: alertmanager
    #gethomepage.dev/widget.url: "https://grafana.domain.com"
    #gethomepage.dev/pod-selector: ""
    #gethomepage.dev/weight: 10 # optional
    #gethomepage.dev/instance: "public" # optional
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`alertmanager.domain.com`)
      services:
      - name: kube-prometheus-stack-alertmanager
        port: 9093
        serversTransport: monitoring-alertmanager-transport
      middlewares:
        - name: monitoring-kube-prometheus-stack-security
  tls:
    secretName: alertmanager-domain-com
    options:
      name: monitoring-kube-prometheus-stack-tlsoptions
