# Persistent Volume Claim for all Media
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-server-pvc
  namespace: media-server
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 15Ti
  storageClassName: rook-cephfs-ssd4t
---
# Transmission Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transmission
  namespace: media-server
  labels:
    app: transmission
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transmission
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: transmission
    spec:
      volumes:
      - name: transmission-data
        persistentVolumeClaim:
          claimName: media-server-pvc
      containers:
        - image: lscr.io/linuxserver/transmission:latest
          name: transmission
          imagePullPolicy: Always
          env:
            - name:  TZ
              value: Europe/Rome
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
           - containerPort: 9091
             name: http-9091
             protocol: TCP
           - containerPort: 51413
             name: http-51413
             protocol: TCP
           - containerPort: 51413
             name: udp-51413
             protocol: UDP
          volumeMounts:
           - mountPath: /downloads/transmission
             subPath: downloads/transmission
             name: transmission-data
           - mountPath: /watch/transmission
             subPath: watch/transmission
             name: transmission-data
           - mountPath: /config
             subPath: configs/transmission
             name: transmission-data
---
apiVersion: v1
kind: Service
metadata:
  name: transmission
  labels:
    app: transmission
  namespace: media-server
spec:
  type: ClusterIP
  ports:
    - port: 9091
      targetPort: 9091
      protocol: TCP
      name: http
  selector:
    app: transmission
---
# Transmission Traefik
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: transmission-urbaman
  namespace: media-server
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - transmission.urbaman.it
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: transmission-urbaman
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-transmission-https-redirect
  namespace: media-server
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-transmission-security
  namespace: media-server
spec:
  headers:
    frameDeny: true
    sslRedirect: true
    browserXssFilter: true
    contentTypeNosniff: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: traefik-transmission-transport
  namespace: media-server
spec:
  serverName: transmission 
  insecureSkipVerify: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: traefik-transmission-tlsoptions
  namespace: media-server
spec:
  minVersion: VersionTLS12
  cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_AES_256_GCM_SHA384
    - TLS_AES_128_GCM_SHA256
    - TLS_CHACHA20_POLY1305_SHA256
    - TLS_FALLBACK_SCSV
  curvePreferences:
    - CurveP521
    - CurveP384
  sniStrict: false
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-transmission-websecure
  namespace: media-server 
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`transmission.urbaman.it`)
      services:
        - name: transmission
          port: 9091
          serversTransport: traefik-transmission-transport
      middlewares:
        - name: traefik-transmission-security
  tls:
    secretName: transmission-urbaman
    options:
      name: traefik-transmission-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-transmission-web
  namespace: media-server
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`transmission.urbaman.it`)
      services:
        - name: transmission
          port: 9091
      middlewares:
        - name: traefik-transmission-https-redirect
---
# Flaresolverr Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaresolverr
  namespace: media-server
  labels:
    app: flaresolverr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flaresolverr
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: flaresolverr
    spec:
      containers:
        - image: ghcr.io/flaresolverr/flaresolverr:latest
          name: flaresolverr
          imagePullPolicy: Always
          env:
            - name: LOG_LEVEL
              value: info
          ports:
           - containerPort: 8191
             name: http-8191
             protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: flaresolverr
  labels:
    app: flaresolverr
  namespace: media-server
spec:
  type: ClusterIP
  ports:
    - port: 8191
      targetPort: 8191
      protocol: TCP
      name: http
  selector:
    app: flaresolverr
---
# Flaresolverr Traefik
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: flaresolverr-urbaman
  namespace: media-server
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - flaresolverr.urbaman.it
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: flaresolverr-urbaman
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-flaresolverr-https-redirect
  namespace: media-server
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-flaresolverr-security
  namespace: media-server
spec:
  headers:
    frameDeny: true
    sslRedirect: true
    browserXssFilter: true
    contentTypeNosniff: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: traefik-flaresolverr-transport
  namespace: media-server
spec:
  serverName: flaresolverr 
  insecureSkipVerify: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: traefik-flaresolverr-tlsoptions
  namespace: media-server
spec:
  minVersion: VersionTLS12
  cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_AES_256_GCM_SHA384
    - TLS_AES_128_GCM_SHA256
    - TLS_CHACHA20_POLY1305_SHA256
    - TLS_FALLBACK_SCSV
  curvePreferences:
    - CurveP521
    - CurveP384
  sniStrict: false
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-flaresolverr-websecure
  namespace: media-server 
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`flaresolverr.urbaman.it`)
      services:
        - name: flaresolverr
          port: 8191
          serversTransport: traefik-flaresolverr-transport
      middlewares:
        - name: traefik-flaresolverr-security
  tls:
    secretName: flaresolverr-urbaman
    options:
      name: traefik-flaresolverr-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-flaresolverr-web
  namespace: media-server
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`flaresolverr.urbaman.it`)
      services:
        - name: flaresolverr
          port: 8191
      middlewares:
        - name: traefik-flaresolverr-https-redirect
---
# Prowlarr Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  namespace: media-server
  labels:
    app: prowlarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      volumes:
      - name: prowlarr-config
        persistentVolumeClaim:
          claimName: media-server-pvc
      containers:
        - image: lscr.io/linuxserver/prowlarr:latest
          name: prowlarr
          imagePullPolicy: Always
          env:
            - name:  TZ
              value: Europe/Rome
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
           - containerPort: 9696
             name: http-9696
             protocol: TCP
          volumeMounts:
           - mountPath: /config
             subPath: configs/prowlarr
             name: prowlarr-config
---
apiVersion: v1
kind: Service
metadata:
  name: prowlarr
  labels:
    app: prowlarr
  namespace: media-server
spec:
  type: ClusterIP
  ports:
    - port: 9696
      targetPort: 9696
      protocol: TCP
      name: http
  selector:
    app: prowlarr
---
# Prowlarr Traefik
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: prowlarr-urbaman
  namespace: media-server
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - prowlarr.urbaman.it
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: prowlarr-urbaman
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-prowlarr-https-redirect
  namespace: media-server
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-prowlarr-security
  namespace: media-server
spec:
  headers:
    frameDeny: true
    sslRedirect: true
    browserXssFilter: true
    contentTypeNosniff: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: traefik-prowlarr-transport
  namespace: media-server
spec:
  serverName: prowlarr 
  insecureSkipVerify: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: traefik-prowlarr-tlsoptions
  namespace: media-server
spec:
  minVersion: VersionTLS12
  cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_AES_256_GCM_SHA384
    - TLS_AES_128_GCM_SHA256
    - TLS_CHACHA20_POLY1305_SHA256
    - TLS_FALLBACK_SCSV
  curvePreferences:
    - CurveP521
    - CurveP384
  sniStrict: false
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-prowlarr-websecure
  namespace: media-server 
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`prowlarr.urbaman.it`)
      services:
        - name: prowlarr
          port: 9696
          serversTransport: traefik-prowlarr-transport
      middlewares:
        - name: traefik-prowlarr-security
  tls:
    secretName: prowlarr-urbaman
    options:
      name: traefik-prowlarr-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-prowlarr-web
  namespace: media-server
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`prowlarr.urbaman.it`)
      services:
        - name: prowlarr
          port: 9696
      middlewares:
        - name: traefik-prowlarr-https-redirect
---
# Sonarr Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media-server
  labels:
    app: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      volumes:
      - name: sonarr-data
        persistentVolumeClaim:
          claimName: media-server-pvc
      containers:
        - image: lscr.io/linuxserver/sonarr:latest
          name: sonarr
          imagePullPolicy: Always
          env:
            - name:  TZ
              value: Europe/Rome
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
           - containerPort: 8989
             name: http-8989
             protocol: TCP
          volumeMounts:
           - mountPath: /config
             subPath: configs/sonarr
             name: sonarr-data
           - mountPath: /tv
             subPath: library/tv
             name: sonarr-data
           - mountPath: /downloads/transmission
             subPath: downloads/transmission
             name: sonarr-data
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  labels:
    app: sonarr
  namespace: media-server
spec:
  type: ClusterIP
  ports:
    - port: 8989
      targetPort: 8989
      protocol: TCP
      name: http
  selector:
    app: sonarr
---
# Prowlarr Traefik
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: sonarr-urbaman
  namespace: media-server
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - sonarr.urbaman.it
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: sonarr-urbaman
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-sonarr-https-redirect
  namespace: media-server
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-sonarr-security
  namespace: media-server
spec:
  headers:
    frameDeny: true
    sslRedirect: true
    browserXssFilter: true
    contentTypeNosniff: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: traefik-sonarr-transport
  namespace: media-server
spec:
  serverName: sonarr 
  insecureSkipVerify: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: traefik-sonarr-tlsoptions
  namespace: media-server
spec:
  minVersion: VersionTLS12
  cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_AES_256_GCM_SHA384
    - TLS_AES_128_GCM_SHA256
    - TLS_CHACHA20_POLY1305_SHA256
    - TLS_FALLBACK_SCSV
  curvePreferences:
    - CurveP521
    - CurveP384
  sniStrict: false
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-sonarr-websecure
  namespace: media-server 
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`sonarr.urbaman.it`)
      services:
        - name: sonarr
          port: 8989
          serversTransport: traefik-sonarr-transport
      middlewares:
        - name: traefik-sonarr-security
  tls:
    secretName: sonarr-urbaman
    options:
      name: traefik-sonarr-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-sonarr-web
  namespace: media-server
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`sonarr.urbaman.it`)
      services:
        - name: sonarr
          port: 8989
      middlewares:
        - name: traefik-sonarr-https-redirect
---
# Radarr Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: media-server
  labels:
    app: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: radarr
    spec:
      volumes:
      - name: radarr-data
        persistentVolumeClaim:
          claimName: media-server-pvc
      containers:
        - image: lscr.io/linuxserver/radarr:latest
          name: radarr
          imagePullPolicy: Always
          env:
            - name:  TZ
              value: Europe/Rome
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
           - containerPort: 7878
             name: http-7878
             protocol: TCP
          volumeMounts:
           - mountPath: /config
             subPath: configs/radarr
             name: radarr-data
           - mountPath: /movies
             subPath: library/movies
             name: radarr-data
           - mountPath: /downloads/transmission
             subPath: downloads/transmission
             name: radarr-data
---
apiVersion: v1
kind: Service
metadata:
  name: radarr
  labels:
    app: radarr
  namespace: media-server
spec:
  type: ClusterIP
  ports:
    - port: 7878
      targetPort: 7878
      protocol: TCP
      name: http
  selector:
    app: radarr
---
# Radarr Traefik
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: radarr-urbaman
  namespace: media-server
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - radarr.urbaman.it
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: radarr-urbaman
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-radarr-https-redirect
  namespace: media-server
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-radarr-security
  namespace: media-server
spec:
  headers:
    frameDeny: true
    sslRedirect: true
    browserXssFilter: true
    contentTypeNosniff: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: traefik-radarr-transport
  namespace: media-server
spec:
  serverName: radarr 
  insecureSkipVerify: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: traefik-radarr-tlsoptions
  namespace: media-server
spec:
  minVersion: VersionTLS12
  cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_AES_256_GCM_SHA384
    - TLS_AES_128_GCM_SHA256
    - TLS_CHACHA20_POLY1305_SHA256
    - TLS_FALLBACK_SCSV
  curvePreferences:
    - CurveP521
    - CurveP384
  sniStrict: false
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-radarr-websecure
  namespace: media-server 
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`radarr.urbaman.it`)
      services:
        - name: radarr
          port: 7878
          serversTransport: traefik-radarr-transport
      middlewares:
        - name: traefik-radarr-security
  tls:
    secretName: radarr-urbaman
    options:
      name: traefik-radarr-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-radarr-web
  namespace: media-server
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`radarr.urbaman.it`)
      services:
        - name: radarr
          port: 7878
      middlewares:
        - name: traefik-radarr-https-redirect

---
# Lidarr Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lidarr
  namespace: media-server
  labels:
    app: lidarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lidarr
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: lidarr
    spec:
      volumes:
      - name: lidarr-data
        persistentVolumeClaim:
          claimName: media-server-pvc
      containers:
        - image: lscr.io/linuxserver/lidarr:latest
          name: lidarr
          imagePullPolicy: Always
          env:
            - name:  TZ
              value: Europe/Rome
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
           - containerPort: 8686
             name: http-8686
             protocol: TCP
          volumeMounts:
           - mountPath: /config
             subPath: configs/lidarr
             name: lidarr-data
           - mountPath: /music
             subPath: library/music
             name: lidarr-data
           - mountPath: /downloads/transmission
             subPath: downloads/transmission
             name: lidarr-data
---
apiVersion: v1
kind: Service
metadata:
  name: lidarr
  labels:
    app: lidarr
  namespace: media-server
spec:
  type: ClusterIP
  ports:
    - port: 8686
      targetPort: 8686
      protocol: TCP
      name: http
  selector:
    app: lidarr
---
# lidarr Traefik
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: lidarr-urbaman
  namespace: media-server
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - lidarr.urbaman.it
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: lidarr-urbaman
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-lidarr-https-redirect
  namespace: media-server
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-lidarr-security
  namespace: media-server
spec:
  headers:
    frameDeny: true
    sslRedirect: true
    browserXssFilter: true
    contentTypeNosniff: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: traefik-lidarr-transport
  namespace: media-server
spec:
  serverName: lidarr 
  insecureSkipVerify: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: traefik-lidarr-tlsoptions
  namespace: media-server
spec:
  minVersion: VersionTLS12
  cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_AES_256_GCM_SHA384
    - TLS_AES_128_GCM_SHA256
    - TLS_CHACHA20_POLY1305_SHA256
    - TLS_FALLBACK_SCSV
  curvePreferences:
    - CurveP521
    - CurveP384
  sniStrict: false
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-lidarr-websecure
  namespace: media-server 
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`lidarr.urbaman.it`)
      services:
        - name: lidarr
          port: 8686
          serversTransport: traefik-lidarr-transport
      middlewares:
        - name: traefik-lidarr-security
  tls:
    secretName: lidarr-urbaman
    options:
      name: traefik-lidarr-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-lidarr-web
  namespace: media-server
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`lidarr.urbaman.it`)
      services:
        - name: lidarr
          port: 8686
      middlewares:
        - name: traefik-lidarr-https-redirect