apiVersion: v1
kind: Secret
metadata:
  name: pgadmin-secret
  namespace: postgresql
type: Opaque
data:
  pgadmin-default-password: c2VjcmV0cGFzc3dvcmQ= # This is "secretpassword", change to your password
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-config-servers
  namespace: postgresql
data:
  servers.json: |
    {
        "Servers": {
          "Internal Postgres": {
            "Name": "PostgreSQL DB",
            "Group": "Servers",
            "Port": 5432,
            "Username": "postgres",
            "Host": "postgresql-postgresql-ha-pgpool.postgresql.svc.cluster.local",
            "SSLMode": "prefer",
            "MaintenanceDB": "postgres"
          }
        }
    }
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgadmin
  namespace: postgresql
  labels:
    app.kubernetes.io/name: postgresql-ha
spec:
  serviceName: pgadmin-service
  podManagementPolicy: Parallel
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
        app.kubernetes.io/name: postgresql-ha
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: pgadmin
          image: dpage/pgadmin4:8.2
          imagePullPolicy: Always
          env:
          - name: PGADMIN_DEFAULT_EMAIL
            value: user@domain.com
          - name: PGADMIN_DEFAULT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: pgadmin-secret
                key: pgadmin-default-password
          ports:
          - name: pgadmin-port
            containerPort: 80
            protocol: TCP
          volumeMounts:
          - name: pgadmin-config-servers
            mountPath: /pgadmin4/servers.json
            subPath: servers.json
            readOnly: true
          - name: pgadmin-data
            mountPath: /var/lib/pgadmin
      volumes:
      - name: pgadmin-config-servers
        configMap:
          name: pgadmin-config-servers
      securityContext:
        fsGroup: 5050
  volumeClaimTemplates:
  - metadata:
      name: pgadmin-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 3Gi
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
  namespace: postgresql
  labels:
    app: pgadmin
spec:
  selector:
   app: pgadmin
  type: ClusterIP
  ports:
   - port: 80
     name: pgadmin-port
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: pgadmin-domain
  namespace: postgresql
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - pgadmin.domain.com
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: pgadmin-domain
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: traefik-pgadmin-https-redirect
  namespace: postgresql
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: traefik-pgadmin-security
  namespace: postgresql
spec:
  headers:
    sslRedirect: true
    browserXssFilter: true
    contentTypeNosniff: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: traefik-pgadmin-transport
  namespace: postgresql
spec:
  serverName: pgadmin 
  insecureSkipVerify: true
---
apiVersion: traefik.io/v1alpha1
kind: TLSOption
metadata:
  name: traefik-pgadmin-tlsoptions
  namespace: postgresql
spec:
  minVersion: VersionTLS12
  cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_AES_256_GCM_SHA384
    - TLS_AES_128_GCM_SHA256
    - TLS_CHACHA20_POLY1305_SHA256
    - TLS_FALLBACK_SCSV
  curvePreferences:
    - CurveP521
    - CurveP384
  sniStrict: false
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-pgadmin-websecure
  namespace: postgresql 
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`pgadmin.domain.com`)
      services:
        - name: pgadmin
          port: 80
          serversTransport: traefik-pgadmin-transport
      middlewares:
        - name: traefik-pgadmin-security
  tls:
    secretName: pgadmin-domain
    options:
      name: traefik-pgadmin-tlsoptions
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-pgadmin-web
  namespace: postgresql
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`pgadmin.domain.com`)
      services:
        - name: pgadmin
          port: 80
      middlewares:
        - name: traefik-pgadmin-https-redirect