apiVersion: apps/v1
kind: Deployment
metadata:
  name: dbgate
  namespace: dbgate
  labels:
    app: dbgate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dbgate
  template:
    metadata:
      labels:
        app: dbgate
    spec:
      containers:
        - name: dbgate
          image: dbgate/dbgate:latest
          ports:
            - containerPort: 3000
              name: http
          volumeMounts:
           - mountPath: /root/.dbgate
             name: dbgate-data
      volumes:
      - name: dbgate-data
        persistentVolumeClaim:
          claimName: dbgate-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dbgate
  name: dbgate
  namespace: dbgate
spec:
  ports:
  - name: http
    port: 3000
    protocol: TCP
    targetPort: http
  selector:
    app: dbgate
  type: ClusterIP
  
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: dbgate-domain
  namespace: dbgate
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - dbgate.domain.com
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: dbgate-domain
  ---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-dbgate-basic-auth
  namespace: dbgate
spec:
  basicAuth:
    secret: traefik-dbgate-basic-auth
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-dbgate-https-redirect
  namespace: dbgate
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-dbgate-security
  namespace: dbgate
spec:
  headers:
    frameDeny: true
    sslRedirect: true
    browserXssFilter: true
    contentTypeNosniff: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: traefik-dbgate-transport
  namespace: dbgate
spec:
  serverName: dbgate 
  insecureSkipVerify: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: traefik-dbgate-tlsoptions
  namespace: dbgate
spec:
  minVersion: VersionTLS12
  cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_AES_256_GCM_SHA384
    - TLS_AES_128_GCM_SHA256
    - TLS_CHACHA20_POLY1305_SHA256
    - TLS_FALLBACK_SCSV
  curvePreferences:
    - CurveP521
    - CurveP384
  sniStrict: false
---
apiVersion: v1
kind: Secret
metadata:
  name: traefik-dbgate-basic-auth
  namespace: dbgate
data:
  users: |
    YWRtaW46JGFwcjEkREpINEtmNGskcERwWVltUGdUamV3M2JyUzliOGpPMAoK
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dbgate-websecure
  namespace: dbgate 
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`dbgate.domain.com`)
      services:
        - name: dbgate
          port: 3000
            #          serversTransport: traefik-dbgate-transport
      middlewares:
        - name: traefik-dbgate-basic-auth
        - name: traefik-dbgate-security
  tls:
    secretName: dbgate-domain
    options:
      name: traefik-dbgate-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dbgate-web
  namespace: dbgate
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`dbgate.domain.com`)
      services:
        - name: dbgate
          port: 3000
      middlewares:
        - name: traefik-dbgate-https-redirect