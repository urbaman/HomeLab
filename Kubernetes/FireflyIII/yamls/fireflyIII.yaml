kind: Namespace
apiVersion: v1
metadata:
  name: firefly
  labels:
    name: firefly
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: firefly-data
  namespace: firefly
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: rook-ceph-nvme2tb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: firefly
  namespace: firefly
  labels:
    app: firefly
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: firefly
  template:
    metadata:
      labels:
        app: firefly
    spec:
      containers:
        - name: firefly
          image: fireflyiii/core:latest
          imagePullPolicy: IfNotPresent
          env:
          - name: APP_KEY
            value: "CHANGEME_32_CHARS"
          - name: DB_HOST
            value: "CHANGEME"
          - name: DB_PORT
            value: "5432"
          - name: DB_CONNECTION
            value: "pgsql"
          - name: DB_DATABASE
            value: "CHANGEME"
          - name: DB_USERNAME
            value: "CHANGEME"
          - name: DB_PASSWORD
            value: "CHANGEME"
          - name: TRUSTED_PROXIES
            value: "**"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /var/www/html/storage/upload
              name: firefly-data
      volumes:
        - name: firefly-data
          persistentVolumeClaim:
            claimName: firefly-data
---
kind: Service
metadata:
  name: firefly
  namespace: firefly
  labels:
    app: firefly
apiVersion: v1
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
  selector:
    app: firefly
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: firefly-domain-com
  namespace: firefly
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - firefly.domain.com
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: firefly-domain-com
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: firefly-https-redirect
  namespace: firefly
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: firefly-security
  namespace: firefly
spec:
  headers:
    frameDeny: true
    sslRedirect: true
    browserXssFilter: true
    contentTypeNosniff: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: firefly-transport
  namespace: firefly
spec:
  serverName: firefly
  insecureSkipVerify: true
---
apiVersion: traefik.io/v1alpha1
kind: TLSOption
metadata:
  name: firefly-tlsoptions
  namespace: firefly
spec:
  minVersion: VersionTLS12
  cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_AES_256_GCM_SHA384
    - TLS_AES_128_GCM_SHA256
    - TLS_CHACHA20_POLY1305_SHA256
    - TLS_FALLBACK_SCSV
  curvePreferences:
    - CurveP521
    - CurveP384
  sniStrict: false
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: firefly-websecure
  namespace: firefly
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`firefly.domain.com`)
      services:
        - name: firefly
          port: 80
          serversTransport: firefly-transport
      middlewares:
        - name: firefly-security
  tls:
    secretName: firefly-domain-com
    options:
      name: firefly-tlsoptions
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: firefly-web
  namespace: firefly
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`firefly.domain.com`)
      services:
        - name: firefly
          port: 80
      middlewares:
        - name: firefly-https-redirect