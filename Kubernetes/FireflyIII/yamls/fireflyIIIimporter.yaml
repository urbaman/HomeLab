apiVersion: apps/v1
kind: Deployment
metadata:
  name: fireflyimporter
  namespace: firefly
  labels:
    app: fireflyimporter
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: fireflyimporter
  template:
    metadata:
      labels:
        app: fireflyimporter
    spec:
      containers:
        - name: fireflyimporter
          image: fireflyIII/data-importer:latest
          imagePullPolicy: IfNotPresent
          env:
          - name: FIREFLY_III_ACCESS_TOKEN
            value: "CHANGEME"
          - name: FIREFLY_III_URL
            value: "http://firefly.firefly.svc.cluster.local:8080" # could be internal service (firefly) to avoid internet
          - name: TRUSTED_PROXIES
            value: "**"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
---
kind: Service
metadata:
  name: fireflyimporter
  namespace: firefly
  labels:
    app: fireflyimporter
apiVersion: v1
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http
  selector:
    app: fireflyimporter
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: fireflyimporter-domain-com
  namespace: firefly
spec:
  # Certificate will be valid for these domain names
  dnsNames:
  - fireflyimporter.domain.com
  # Reference our issuer
  # As it's a ClusterIssuer, it can be in a different namespace
  issuerRef:
    kind: ClusterIssuer
    name: cert-manager-acme-issuer
  # Secret that will be created with our certificate and private keys
  secretName: fireflyimporter-domain-com
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: fireflyimporter-https-redirect
  namespace: firefly
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: fireflyimporter-security
  namespace: firefly
spec:
  headers:
    frameDeny: true
    sslRedirect: true
    browserXssFilter: true
    contentTypeNosniff: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: fireflyimporter-transport
  namespace: firefly
spec:
  serverName: fireflyimporter
  insecureSkipVerify: true
---
apiVersion: traefik.io/v1alpha1
kind: TLSOption
metadata:
  name: fireflyimporter-tlsoptions
  namespace: firefly
spec:
  minVersion: VersionTLS12
  cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_AES_256_GCM_SHA384
    - TLS_AES_128_GCM_SHA256
    - TLS_CHACHA20_POLY1305_SHA256
    - TLS_FALLBACK_SCSV
  curvePreferences:
    - CurveP521
    - CurveP384
  sniStrict: false
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: fireflyimporter-websecure
  namespace: firefly
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`fireflyimporter.domain.com`)
      services:
        - name: fireflyimporter
          port: 8080
          serversTransport: fireflyimporter-transport
      middlewares:
        - name: fireflyimporter-security
  tls:
    secretName: fireflyimporter-domain-com
    options:
      name: fireflyimporter-tlsoptions
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: fireflyimporter-web
  namespace: firefly
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`fireflyimporter.domain.com`)
      services:
        - name: fireflyimporter
          port: 8080
      middlewares:
        - name: fireflyimporter-https-redirect